1.什么是数据结构
	|- 简单说就是数据与数据之间的关系
	|- 分为逻辑结构和存储结构
		|- 逻辑结构
			|- 线性结构：数组、栈、队列、链表（单链表、循环链表、双链表）、递归、排序算法
				|- T(n):算法中语句执行的次数成为语句频度，记为T(n);
					|- 将程序每一行的执行次数求和
				|- O(f(n)):如果存在一个函数f(n)，当n趋近于无穷大，T(n)/f（n）趋近于一个非零的常数时，我们成f(n)为T（n）的同级函数，记为T(n)=O(f(n))
					|- 这个大O函数被称作渐进的时间复杂度
						|- 计算方式：去T（n）的最高阶并将系数置1
					|- 常见时间复杂度优先级：O(1)、O(logn)、O(n)、O(nlogn)、O(n^2)、O（n^3）、O（n^k）、O(2^n)
			|- 树结构：
			|- 图结构：
			|- 集合结构
		|- 存储结构
			|- 顺序存储
			|- 链式存储
2.什么是算法
	|- 算法就是解决问题的一个思路
	|- 基本特性
		|- 可行性：要能够解决实际问题
		|- 确定性：一个算法的结果应该是唯一的
		|- 输入和输出：前因后果，针对不同的条件有不同的处理结果
		|- 有穷性：算法不应该无限的进行，一定要有结果
	|- 基本要求
		|- 正确性：算法能切实的解决针对的问题
		|- 可读性：良好的阅读性
		|- 健壮性：要尽可能的有一个全面的、多方位的考虑
		|- 时间复杂度： 算法运行的时间
		|- 空间复杂度：算法执行过程占用的内存
	|- 8种基本排序算法
		|- 交换排序：冒泡排序、快速排序
		|- 插入排序：直接插入排序、希尔排序
		|- 选择排序：简单选择排序、堆排序
		|- 归并排序
		|- 基数排序